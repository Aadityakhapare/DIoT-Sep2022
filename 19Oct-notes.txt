<script>
           class Emp{
            constructor(empid, ename){
                this.empid = empid;
                this.ename = ename;
            }
            displayDetails(){
                console.log(this.empid, this.ename)
            }
           }
           var e1 = new Emp(1001,"Pushkar")
           e1.displayDetails()
           var e2 = new Emp(1002,"Digvajay")
           e2.displayDetails()

           class WageEmp extends Emp{
             constructor(empid, ename, hrs, rate){
                super(empid, ename)
                this.hrs = hrs;
                this.rate = rate;
             }
             displayDetails(){
                super.displayDetails()
                console.log(this.hrs * this.rate)
             }
           }
           var we1 = new WageEmp(12345, "Ritika", 80, 1500);
           we1.displayDetails()
         </script>

--------------------------------

window.method()
- setInterval() - call function after every interval
- setTimeout() - call function once but after a time has elapsed

setTimeout(f1, 5000)

setInterval(f1, 5000)

Higher order function: one func calls another


function f1(){
  //....
}


property - innerHTML

<tag>body</tag>

<head>
        <script>
           function f1(){   //event handler
                var no1 = parseInt(document.getElementById("no1").value)
                var no2 = parseInt(document.getElementById("no2").value)
                document.getElementById("d1").innerHTML = no1+no2
           }
        </script>
    </head>
    <body>
        <h1>Welcome to Javascript</h1>
        <form>
            No1 : <input type="text" name="no1" id="no1"><br>
            No2 : <input type="text" name="no2" id="no2"><br>
            <input type="button" value="Add" onclick="f1()"><br>
            Sum is : <span id="d1"></span>
        </form>
    </body>

-------------------------------




p{}





